{"version":3,"sources":["../../../server/merchant/templateParameters.js"],"names":["TABLE_NAME","logger","defaultValue","sessionID","returnURL","getReturnURL","template","err","error"],"mappings":";;;;;;;AAEA;;AACA;;;;AAEO,MAAMA,kCAAa,uCAAnB;;AAEP,MAAMC,SAAS,kBAAI,oBAAJ,CAAf;;AAOA,MAAMC,eAAuC;AAC3CC,aAAW,EADgC;AAE3CC,aAAW;AAFgC,CAA7C;;AAOO,MAAMC;AAAA,+BAAgC,WAAO,EAAEF,SAAF,EAAP,EAAyB;AACpE,QAAI;AACF,YAAMG,WAAW,MAAM,mBAAON,UAAP,EAAmB,EAAEG,SAAF,EAAnB,EAAkCD,YAAlC,CAAvB;;AAEA,aAAOI,SAASF,SAAhB;AACD,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZN,aAAOO,KAAP,CAAaD,GAAb;;AAEA,YAAMA,GAAN;AACD;AACF,GAVY;;AAAA;AAAA;AAAA;AAAA,IAAN","file":"templateParameters.js","sourcesContent":["/* @flow */\n\nimport { findBy } from '../dynamoDB/query';\nimport { log } from '../utils/logging';\n\nexport const TABLE_NAME = 'Hosted-Payment-Web-TemplateParameters';\n\nconst logger = log('templateParameters');\n\ntype TemplateParametersType = {\n  sessionID: string,\n  returnURL: string,\n};\n\nconst defaultValue: TemplateParametersType = {\n  sessionID: '',\n  returnURL: '',\n};\n\ntype GetReturnURLDef = ({ sessionID: string }) => Promise<string>;\n\nexport const getReturnURL: GetReturnURLDef = async ({ sessionID }) => {\n  try {\n    const template = await findBy(TABLE_NAME, { sessionID }, defaultValue);\n\n    return template.returnURL;\n  } catch (err) {\n    logger.error(err);\n\n    throw err;\n  }\n};\n"]}