{"version":3,"sources":["../../../../server/merchant/__integrations__/templateParameters.js"],"names":["beforeAll","endpointURL","TABLE_NAME","afterAll","it","template","sessionID","returnURL","result","expect","toEqual"],"mappings":";;AAEA;;AACA;;AACA;;AACA;;;;AAEAA,4BAAU,aAAY;AACpB,iBAAc;AACZC,iBAAa;AADD,GAAd;;AAIA,QAAM,yBAAYC,8BAAZ,CAAN;AACA,QAAM,uBAAUA,8BAAV,CAAN;AACD,CAPD;;AASAC,2BAAS,aAAY;AACnB,QAAM,uBAAUD,8BAAV,CAAN;AACD,CAFD;;AAIAE,GAAG,oDAAH,oBAAyD,aAAY;AACnE,QAAMC,WAAW,MAAM,kBAAMH,8BAAN,EAAkB,EAAEI,WAAW,EAAb,EAAiBC,WAAW,EAA5B,EAAlB,CAAvB;;AAEA,QAAMC,SAAS,MAAM,sCAAa,EAAEF,WAAWD,SAASC,SAAtB,EAAb,CAArB;;AAEAG,SAAOD,MAAP,EAAeE,OAAf,CAAuBL,SAASE,SAAhC;AACD,CAND;;AAQAH,GAAG,uDAAH,oBAA4D,aAAY;AACtE,QAAMI,SAAS,MAAM,sCAAa,EAAEF,WAAW,KAAb,EAAb,CAArB;;AAEAG,SAAOD,MAAP,EAAeE,OAAf,CAAuB,EAAvB;AACD,CAJD","file":"templateParameters.js","sourcesContent":["/* @flow */\n\nimport { getReturnURL, TABLE_NAME } from '../templateParameters';\nimport { createTable, seedTable, dropTable } from '../../__fixtures__/seeder';\nimport { setup as setupDynamoDB } from '../../dynamoDB/db';\nimport { first } from '../../dynamoDB/query';\n\nbeforeAll(async () => {\n  setupDynamoDB({\n    endpointURL: 'http://localhost:8000',\n  });\n\n  await createTable(TABLE_NAME);\n  await seedTable(TABLE_NAME);\n});\n\nafterAll(async () => {\n  await dropTable(TABLE_NAME);\n});\n\nit('returns the order complete url from the session id', async () => {\n  const template = await first(TABLE_NAME, { sessionID: '', returnURL: '' });\n\n  const result = await getReturnURL({ sessionID: template.sessionID });\n\n  expect(result).toEqual(template.returnURL);\n});\n\nit('returns an empty string when the session is not found', async () => {\n  const result = await getReturnURL({ sessionID: 'ops' });\n\n  expect(result).toEqual('');\n});\n"]}