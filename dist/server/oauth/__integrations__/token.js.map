{"version":3,"sources":["../../../../server/oauth/__integrations__/token.js"],"names":["token","secret","path","config","oauth","credentialsDir","value","type","it","result","expect","toEqual","fs","remove","rejects","toThrow","outputFile"],"mappings":";;AAEA;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,QAAQ;AACZC,UAAQ;AACNC,UAAO,GAAEC,iBAAOC,KAAP,CAAaC,cAAe,6BAD/B;AAENC,WAAO;AAFD,GADI;AAKZC,QAAM;AACJL,UAAO,GAAEC,iBAAOC,KAAP,CAAaC,cAAe,2BADjC;AAEJC,WAAO;AAFH;AALM,CAAd;;AAWAE,GAAG,4CAAH,oBAAiD,aAAY;AAC3D,QAAMC,SAAS,MAAM,0BAArB;;AAEAC,SAAOD,MAAP,EAAeE,OAAf,CAAuB;AACrBJ,UAAMP,MAAMO,IAAN,CAAWD,KADI;AAErBL,YAAQD,MAAMC,MAAN,CAAaK;AAFA,GAAvB;AAID,CAPD;;AASAE,GAAG,2CAAH,oBAAgD,aAAY;AAC1D,QAAMI,kBAAGC,MAAH,CAAUb,MAAMO,IAAN,CAAWL,IAArB,CAAN;;AAEA,QAAMQ,OAAO,0BAAP,EAAuBI,OAAvB,CAA+BC,OAA/B,EAAN;;AAEA,QAAMH,kBAAGI,UAAH,CAAchB,MAAMO,IAAN,CAAWL,IAAzB,EAA+BF,MAAMO,IAAN,CAAWD,KAA1C,CAAN;AACD,CAND","file":"token.js","sourcesContent":["/* @flow */\n\nimport fs from 'fs-extra';\n\nimport config from '../../config';\nimport { matraService } from '../token';\n\nconst token = {\n  secret: {\n    path: `${config.oauth.credentialsDir}/matra-service-token-secret`,\n    value: '123',\n  },\n  type: {\n    path: `${config.oauth.credentialsDir}/matra-service-token-type`,\n    value: 'Bearer',\n  },\n};\n\nit('returns matra service authentication token', async () => {\n  const result = await matraService();\n\n  expect(result).toEqual({\n    type: token.type.value,\n    secret: token.secret.value,\n  });\n});\n\nit('throws an error when token does not exist', async () => {\n  await fs.remove(token.type.path);\n\n  await expect(matraService()).rejects.toThrow();\n\n  await fs.outputFile(token.type.path, token.type.value);\n});\n"]}