{"version":3,"sources":["../../../server/oauth/token.js"],"names":["path","logger","readFileAsync","readFile","readToken","name","type","join","config","oauth","credentialsDir","then","str","trim","matraService","readTokenType","readTokenSecret","secret","Promise","all","err","error"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;IAAYA,I;;AAEZ;;;;AACA;;;;;;;;AAEA,MAAMC,SAAS,kBAAI,mBAAJ,CAAf;AACA,MAAMC,gBAAgB,qBAAUC,YAAV,CAAtB;;AAIA,MAAMC,YAA0B,CAACC,IAAD,EAAOC,IAAP,KAC9BJ,cAAcF,KAAKO,IAAL,CAAUC,iBAAOC,KAAP,CAAaC,cAAvB,EAAwC,GAAEL,IAAK,UAASC,IAAK,EAA7D,CAAd,EAA+E,OAA/E,EAAwFK,IAAxF,CAA6FC,OAAOA,IAAIC,IAAJ,EAApG,CADF;;AAUO,MAAMC;AAAA,+BAAgC,aAAY;AACvD,QAAI;AACF,YAAMC,gBAAgBX,UAAU,eAAV,EAA2B,MAA3B,CAAtB;AACA,YAAMY,kBAAkBZ,UAAU,eAAV,EAA2B,QAA3B,CAAxB;;AAEA,YAAM,CAACE,IAAD,EAAOW,MAAP,IAAiB,MAAMC,QAAQC,GAAR,CAAY,CAACJ,aAAD,EAAgBC,eAAhB,CAAZ,CAA7B;;AAEA,aAAO;AACLV,YADK;AAELW;AAFK,OAAP;AAID,KAVD,CAUE,OAAOG,GAAP,EAAY;AACZnB,aAAOoB,KAAP,CAAaD,GAAb;;AAEA,YAAMA,GAAN;AACD;AACF,GAhBY;;AAAA;AAAA;AAAA;AAAA,IAAN","file":"token.js","sourcesContent":["/* @flow */\n\nimport { readFile } from 'fs';\nimport { promisify } from 'util';\nimport * as path from 'path';\n\nimport config from '../config';\nimport { log } from '../utils/logging';\n\nconst logger = log('oauth:token:matra');\nconst readFileAsync = promisify(readFile);\n\ntype ReadTokenDef = (name: string, type: string) => Promise<string>;\n\nconst readToken: ReadTokenDef = (name, type) =>\n  readFileAsync(path.join(config.oauth.credentialsDir, `${name}-token-${type}`), 'utf-8').then(str => str.trim());\n\ntype TokenType = {\n  type: string,\n  secret: string,\n};\n\ntype MatraServiceDef = () => Promise<TokenType>;\n\nexport const matraService: MatraServiceDef = async () => {\n  try {\n    const readTokenType = readToken('matra-service', 'type');\n    const readTokenSecret = readToken('matra-service', 'secret');\n\n    const [type, secret] = await Promise.all([readTokenType, readTokenSecret]);\n\n    return {\n      type,\n      secret,\n    };\n  } catch (err) {\n    logger.error(err);\n\n    throw err;\n  }\n};\n"]}