{"version":3,"sources":["../../../server/validations/index.js"],"names":["validateHeaders","req","res","next","template","validate","isValid","_","every","headers","value","header","status","response","send","error","validateBody","body","create","setup","validations","templates","map","resolved","variables","undefined","url","match","route"],"mappings":";;;;;;;;;AAEA;;;;AAEA;;;;AAGA,MAAMA,kBAAkB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClE,QAAMC,UAAUC,iBAAEC,KAAF,CAAQH,SAASI,OAAjB,EAA0B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3D,QAAIV,IAAIQ,OAAJ,CAAYE,MAAZ,KAAuBV,IAAIQ,OAAJ,CAAYE,MAAZ,MAAwBD,KAAnD,EAA0D;AACxD,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GALe,CAAhB;;AAOA,MAAI,CAACJ,OAAL,EAAc;AACZJ,QAAIU,MAAJ,CAAWR,SAASS,QAAT,CAAkBD,MAA7B,EAAqCE,IAArC,CAA0CV,SAASS,QAAT,CAAkBE,KAA5D;AACA,WAAOZ,KAAKC,SAASS,QAAT,CAAkBE,KAAvB,CAAP;AACD;;AAED,SAAOZ,MAAP;AACD,CAdD;;AAgBA,MAAMa,eAAe,CAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/D,QAAMC,UAAUC,iBAAEC,KAAF,CAAQH,SAASY,IAAjB,EAAuB,CAACP,KAAD,EAAQO,IAAR,KAAiB;AACtD,QAAIhB,IAAIgB,IAAJ,CAASA,IAAT,KAAkBhB,IAAIgB,IAAJ,CAASA,IAAT,MAAmB,EAArC,IAA2CP,UAAU,UAAzD,EAAqE;AACnE,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GALe,CAAhB;;AAOA,MAAI,CAACJ,OAAL,EAAc;AACZJ,QAAIU,MAAJ,CAAWR,SAASS,QAAT,CAAkBD,MAA7B,EAAqCE,IAArC,CAA0CV,SAASS,QAAT,CAAkBE,KAA5D;AACA,WAAOZ,KAAKC,SAASS,QAAT,CAAkBE,KAAvB,CAAP;AACD;;AAED,SAAOZ,MAAP;AACD,CAdD;;AAgBO,MAAMe,0BAAUC,KAAD,IAAkB;AACtC,QAAMC,cAAcD,MAAME,SAAN,CAAgBC,GAAhB,CAAqBlB,QAAD,IAAc;AACpD,UAAMmB,WAAW,4BAAgBnB,QAAhB,eAA+Be,MAAMK,SAArC,EAAmDpB,SAASoB,SAA5D,EAAjB;;AAEA,WAAO,CAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzB,YAAM,EAAEE,QAAF,KAAekB,QAArB;;AAEA,UAAIlB,aAAaoB,SAAjB,EAA4B;AAC1B,eAAOtB,MAAP;AACD;;AAED,UAAIF,IAAIyB,GAAJ,CAAQC,KAAR,CAAcJ,SAASK,KAAvB,CAAJ,EAAmC;AACjC,YAAIvB,SAASI,OAAT,KAAqBgB,SAAzB,EAAoC;AAClC,iBAAOzB,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCoB,QAAhC,EAA0ClB,QAA1C,CAAP;AACD;;AAED,YAAIA,SAASY,IAAT,KAAkBQ,SAAtB,EAAiC;AAC/B,iBAAOT,aAAaf,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BoB,QAA7B,EAAuClB,QAAvC,CAAP;AACD;AACF;;AAED,aAAOF,MAAP;AACD,KAlBD;AAmBD,GAtBmB,CAApB;;AAwBA,SAAOiB,WAAP;AACD,CA1BM","file":"index.js","sourcesContent":["/* @flow */\n\nimport _ from 'lodash';\n\nimport { resolveTemplate } from '../utils';\nimport type { Setup } from '../types';\n\nconst validateHeaders = (req, res, next) => (template, validate) => {\n  const isValid = _.every(validate.headers, (value, header) => {\n    if (req.headers[header] && req.headers[header] === value) {\n      return true;\n    }\n    return false;\n  });\n\n  if (!isValid) {\n    res.status(template.response.status).send(template.response.error);\n    return next(template.response.error);\n  }\n\n  return next();\n};\n\nconst validateBody = (req, res, next) => (template, validate) => {\n  const isValid = _.every(validate.body, (value, body) => {\n    if (req.body[body] && req.body[body] === '' && value === 'required') {\n      return true;\n    }\n    return false;\n  });\n\n  if (!isValid) {\n    res.status(template.response.status).send(template.response.error);\n    return next(template.response.error);\n  }\n\n  return next();\n};\n\nexport const create = (setup: Setup) => {\n  const validations = setup.templates.map((template) => {\n    const resolved = resolveTemplate(template, { ...setup.variables, ...template.variables });\n\n    return (req, res, next) => {\n      const { validate } = resolved;\n\n      if (validate === undefined) {\n        return next();\n      }\n\n      if (req.url.match(resolved.route)) {\n        if (validate.headers !== undefined) {\n          return validateHeaders(req, res, next)(resolved, validate);\n        }\n\n        if (validate.body !== undefined) {\n          return validateBody(req, res, next)(resolved, validate);\n        }\n      }\n\n      return next();\n    };\n  });\n\n  return validations;\n};\n"]}