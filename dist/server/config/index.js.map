{"version":3,"sources":["../../../server/config/index.js"],"names":["dotenv","config","convictConfig","env","doc","format","default","port","loglevel","oauth","credentialsDir","translationService","graphiql","validate","allowed","get"],"mappings":";;;;;;AAEA;;;;AACA;;;;;;AAEA;AACA;AACAA,iBAAOC,MAAP;;AAEA,MAAMC,gBAAgB,uBAAQ;AAC5BC,OAAK;AACHC,SAAK,yBADF;AAEHC,YAAQ,CAAC,YAAD,EAAe,aAAf,EAA8B,MAA9B,CAFL;AAGHC,aAAS,YAHN;AAIHH,SAAK;AAJF,GADuB;AAO5BI,QAAM;AACJH,SAAK,sCADD;AAEJC,YAAQ,MAFJ;AAGJC,aAAS,MAHL;AAIJH,SAAK;AAJD,GAPsB;AAa5BK,YAAU;AACRJ,SAAK,kBADG;AAERC,YAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,KAAnC,CAFA;AAGRC,aAAS,MAHD;AAIRH,SAAK;AAJG,GAbkB;AAmB5BM,SAAO;AACLC,oBAAgB;AACdN,WAAK,uBADS;AAEdC,cAAQ,GAFM;AAGdC,eAAS,mBAHK;AAIdH,WAAK;AAJS;AADX,GAnBqB;AA2B5BQ,sBAAoB;AAClBP,SAAK,qBADa;AAElBC,YAAQ,GAFU;AAGlBC,aAAS,kEAHS;AAIlBH,SAAK;AAJa,GA3BQ;AAiC5BS,YAAU;AACRR,SAAK,UADG;AAERC,YAAQ,SAFA;AAGRC,aAAS,KAHD;AAIRH,SAAK;AAJG;AAjCkB,CAAR,CAAtB;;AAyCAD,cAAcW,QAAd,CAAuB,EAAEC,SAAS,QAAX,EAAvB;;AAaA,MAAMb,SAAiB;AACrBE,OAAKD,cAAca,GAAd,CAAkB,KAAlB,CADgB;AAErBR,QAAML,cAAca,GAAd,CAAkB,MAAlB,CAFe;AAGrBP,YAAUN,cAAca,GAAd,CAAkB,UAAlB,CAHW;AAIrBN,SAAO;AACLC,oBAAgBR,cAAca,GAAd,CAAkB,sBAAlB;AADX,GAJc;AAOrBJ,sBAAoBT,cAAca,GAAd,CAAkB,oBAAlB,CAPC;AAQrBH,YAAUV,cAAca,GAAd,CAAkB,UAAlB;AARW,CAAvB;;kBAWed,M","file":"index.js","sourcesContent":["/* @flow */\n\nimport dotenv from 'dotenv';\nimport convict from 'convict';\n\n// Load the .env file from the system\n// in case this file is not present it will be silently ignored\ndotenv.config();\n\nconst convictConfig = convict({\n  env: {\n    doc: 'Application environment',\n    format: ['production', 'development', 'test'],\n    default: 'production',\n    env: 'NODE_ENV',\n  },\n  port: {\n    doc: 'The Port the server should listen to',\n    format: 'port',\n    default: '3000',\n    env: 'PORT',\n  },\n  loglevel: {\n    doc: 'Level of logging',\n    format: ['debug', 'info', 'warn', 'error', 'off'],\n    default: 'info',\n    env: 'LOGLEVEL',\n  },\n  oauth: {\n    credentialsDir: {\n      doc: 'Credentials directory',\n      format: '*',\n      default: '/meta/credentials',\n      env: 'CREDENTIALS_DIR',\n    },\n  },\n  translationService: {\n    doc: 'Translation Service',\n    format: '*',\n    default: 'https://translation-api.pathfinder.zalan.do/translations/shop.DE',\n    env: 'TRANSLATION_SERVICE_HOST',\n  },\n  graphiql: {\n    doc: 'Graphiql',\n    format: 'Boolean',\n    default: false,\n    env: 'ENABLE_GRAPHIQL',\n  },\n});\n\nconvictConfig.validate({ allowed: 'strict' });\n\ntype Config = {\n  env: 'production' | 'development' | 'test',\n  port: number,\n  loglevel: 'debug' | 'info' | 'warn' | 'error',\n  oauth: {\n    credentialsDir: string,\n  },\n  translationService: string,\n  graphiql: boolean,\n};\n\nconst config: Config = {\n  env: convictConfig.get('env'),\n  port: convictConfig.get('port'),\n  loglevel: convictConfig.get('loglevel'),\n  oauth: {\n    credentialsDir: convictConfig.get('oauth.credentialsDir'),\n  },\n  translationService: convictConfig.get('translationService'),\n  graphiql: convictConfig.get('graphiql'),\n};\n\nexport default config;\n"]}