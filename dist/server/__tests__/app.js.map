{"version":3,"sources":["../../../server/__tests__/app.js"],"names":["app","beforeAll","it","get","expect","spy","jest","spyOn","mockImplementationOnce","port","fn","toBeCalledWith","any","Number","Function"],"mappings":";;AAEA;;;;AACA;;;;AAEA,IAAIA,GAAJ;;AAEAC,UAAU,MAAM;AACdD,QAAM,qBAAN;AACD,CAFD;;AAIAE,GAAG,sBAAH,EAA2B,MACzB,yBAAUF,GAAV,EACGG,GADH,CACO,GADP,EAEGC,MAFH,CAEU,GAFV,CADF;;AAKAF,GAAG,gCAAH,EAAqC,MACnC,yBAAUF,GAAV,EACGG,GADH,CACO,GADP,EAEGC,MAFH,CAEU,aAFV,CADF;;AAKAF,GAAG,4BAAH,EAAiC,MAC/B,yBAAUF,GAAV,EACGG,GADH,CACO,SADP,EAEGC,MAFH,CAEU,GAFV,CADF;;AAKAF,GAAG,6BAAH,EAAkC,MAChC,yBAAUF,GAAV,EACGG,GADH,CACO,SADP,EAEGC,MAFH,CAEU,IAFV,CADF;;AAKAF,GAAG,kCAAH,EAAuC,MACrC,yBAAUF,GAAV,EACGG,GADH,CACO,wBADP,EAEGC,MAFH,CAEU,GAFV,CADF;;AAKAF,GAAG,8CAAH,EAAmD,MAAM;AACvD,QAAMG,MAAMC,KAAKC,KAAL,CAAWP,GAAX,EAAgB,QAAhB,EAA0BQ,sBAA1B,CAAiD,CAACC,IAAD,EAAOC,EAAP,KAAc;AACzEA;AACD,GAFW,CAAZ;;AAIA,qBAASV,GAAT;;AAEAI,SAAOC,GAAP,EAAYM,cAAZ,CAA2BP,OAAOQ,GAAP,CAAWC,MAAX,CAA3B,EAA+CT,OAAOQ,GAAP,CAAWE,QAAX,CAA/C;AACD,CARD","file":"app.js","sourcesContent":["/* @flow */\n\nimport supertest from 'supertest';\nimport { createApp, startApp } from '../app';\n\nlet app;\n\nbeforeAll(() => {\n  app = createApp();\n});\n\nit('returns 200 on GET /', () =>\n  supertest(app)\n    .get('/')\n    .expect(200));\n\nit('returns \"hello world\" on GET /', () =>\n  supertest(app)\n    .get('/')\n    .expect('Hello World'));\n\nit('returns 200 on GET /health', () =>\n  supertest(app)\n    .get('/health')\n    .expect(200));\n\nit('returns \"<3\" on GET /health', () =>\n  supertest(app)\n    .get('/health')\n    .expect('<3'));\n\nit('returns 404 on any unknown route', () =>\n  supertest(app)\n    .get('/foobar/is/not/defined')\n    .expect(404));\n\nit('calls the listen function on the application', () => {\n  const spy = jest.spyOn(app, 'listen').mockImplementationOnce((port, fn) => {\n    fn();\n  });\n\n  startApp(app);\n\n  expect(spy).toBeCalledWith(expect.any(Number), expect.any(Function));\n});\n"]}