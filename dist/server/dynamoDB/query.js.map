{"version":3,"sources":["../../../server/dynamoDB/query.js"],"names":["findBy","table","query","defaultValue","result","get","TableName","Key","promise","Promise","resolve","Item","err","first","scan","Items"],"mappings":";;;;;;;;;AAEA;;;;AAIO,MAAMA;AAAA,+BAAoB,WAAOC,KAAP,EAAcC,KAAd,EAAqBC,YAArB,EAAsC;AACrE,QAAI;AACF,YAAMC,SAAS,MAAM,0BAClBC,GADkB,CACd;AACHC,mBAAWL,KADR;AAEHM,0BACKL,KADL;AAFG,OADc,EAOlBM,OAPkB,EAArB;;AASA,aAAOC,QAAQC,OAAR,CAAgBN,OAAOO,IAAP,IAAeR,YAA/B,CAAP;AACD,KAXD,CAWE,OAAOS,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF,GAfY;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAmBA,MAAMC;AAAA,gCAAkB,WAAOZ,KAAP,EAAcE,YAAd,EAA+B;AAC5D,QAAI;AACF,YAAMC,SAAS,MAAM,0BAClBU,IADkB,CACb;AACJR,mBAAWL;AADP,OADa,EAIlBO,OAJkB,EAArB;;AAMA,aAAOC,QAAQC,OAAR,CAAgBN,OAAOW,KAAP,CAAa,CAAb,KAAmBZ,YAAnC,CAAP;AACD,KARD,CAQE,OAAOS,GAAP,EAAY;AACZ,YAAMA,GAAN;AACD;AACF,GAZY;;AAAA;AAAA;AAAA;AAAA,IAAN","file":"query.js","sourcesContent":["/* @flow */\n\nimport { documentClient } from './db';\n\ntype FindByDef = <T>(table: string, query: { [string]: string }, defaultValue: T) => Promise<T>;\n\nexport const findBy: FindByDef = async (table, query, defaultValue) => {\n  try {\n    const result = await documentClient()\n      .get({\n        TableName: table,\n        Key: {\n          ...query,\n        },\n      })\n      .promise();\n\n    return Promise.resolve(result.Item || defaultValue);\n  } catch (err) {\n    throw err;\n  }\n};\n\ntype FirstDef = <T>(table: string, defaultValue: T) => Promise<T>;\n\nexport const first: FirstDef = async (table, defaultValue) => {\n  try {\n    const result = await documentClient()\n      .scan({\n        TableName: table,\n      })\n      .promise();\n\n    return Promise.resolve(result.Items[0] || defaultValue);\n  } catch (err) {\n    throw err;\n  }\n};\n"]}